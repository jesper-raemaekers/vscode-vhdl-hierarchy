{"version":3,"sources":[".././src/EntityProvider.ts",".././src/entity.ts",".././src/extension.ts","../external \"fs\"","../external \"path\"","../external \"readline\"","../external \"vscode\"","../webpack/bootstrap","../webpack/startup"],"names":[],"mappings":"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","file":"extension.js","sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { Entity } from './entity';\n\nexport class EntityProvider implements vscode.TreeDataProvider<Entity> {\n\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<Entity | undefined> = new vscode.EventEmitter<Entity | undefined>();\n\treadonly onDidChangeTreeData: vscode.Event<Entity | undefined> = this._onDidChangeTreeData.event;\n\n\ttopLevelFile: string | undefined;\n\n\tentityList: Entity[];\n\ttopLevelEntity: Entity | undefined;\n\n\tconstructor(private workspaceRoot: string) {\n\t\tthis.entityList = [];\n\t}\n\n\tasync refresh(): Promise<void> {\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\t// editEntity(ent:Entity): void{\n\t// \tvscode.window.showTextDocument(ent.filePath);\n\t// }\n\n\n\tasync analyze() {\n\t\tthis.entityList = [];\n\t\tlet topLevelSetting: string | undefined = vscode.workspace.getConfiguration('VHDL-hierarchy', null).get('TopLevelFile');\n\t\tif (!this.topLevelFile) {\n\t\t\tif (topLevelSetting) {\n\t\t\t\tthis.topLevelFile = topLevelSetting;\n\t\t\t}\n\t\t}\n\t\tif (!this.topLevelFile) {\n\t\t\tvscode.window.showInformationMessage('No top levl file set. Set a top level file using the SetTopLevel command');\n\t\t}\n\t\telse {\n\t\t\tconst path = vscode.workspace.rootPath;\n\t\t\tconsole.log('start analyzing with root file ' + this.topLevelFile);\n\n\t\t\tlet files: string[] = [];\n\t\t\tgetVhdlFiles(path!, files);\n\n\n\t\t\t// files.forEach(file =>{this.entityList.push(new Entity(file));});\n\t\t\t// files.forEach(function(this:any, file:string)\n\t\t\t// {\n\t\t\t// \tthis.entityList.push(new Entity(file));\n\t\t\t// }.bind(this)\t\n\t\t\t// );\n\n\t\t\t// readInterface.on('line', function(this:any, line: any) {\n\n\t\t\t// files.forEach(file =>{\n\t\t\t// \tvar newEntity = new Entity(file);\n\t\t\t// \tif(file === this.topLevelFile)\n\t\t\t// \t{\n\t\t\t// \t\tthis.topLevelEntity = newEntity;\n\t\t\t// \t}\n\t\t\t// \tthis.entityList.push(newEntity);\n\t\t\t// });\n\t\t\tawait vscode.window.withProgress({\n\t\t\t\tlocation: vscode.ProgressLocation.Notification,\n\t\t\t\ttitle: \"Analyzing VHDL file \",\n\t\t\t\tcancellable: false,\n\n\t\t\t}, async (progress, token) => {\n\t\t\t\tconst p = new Promise(async resolve => {\n\n\t\t\t\t\tprogress.report({ increment: 0 });\n\n\t\t\t\t\tvar progressCounter = 0;\n\t\t\t\t\tfor (const file of files) {\n\t\t\t\t\t\tprogressCounter++;\n\n\t\t\t\t\t\tthis.entityList.push(new Entity(file));\n\t\t\t\t\t\tprogress.report({ increment: (progressCounter / files.length), message: this.entityList[this.entityList.length - 1].label + \"...\" });\n\t\t\t\t\t\tif (file === this.topLevelFile) {\n\t\t\t\t\t\t\tthis.topLevelEntity = this.entityList[this.entityList.length - 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.entityList[this.entityList.length - 1].readFromFile();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const ent of this.entityList) {\n\t\t\t\t\t\tent.findChieldEntities(this.entityList);\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(\"Analysis complete \" + this.entityList.length);\n\t\t\t\t\tvscode.commands.executeCommand('vhdl-hierarchy.refresh');\n\t\t\t\t\tresolve(undefined);\n\n\t\t\t\t});\n\n\t\t\t\treturn p;\n\t\t\t});\n\n\t\t\t// files.forEach(function(this:any, file:string)\n\t\t\t// \t{\n\n\n\t\t\t// \t}.bind(this)\t\n\t\t\t// \t);\n\n\t\t\t// await this.entityList[this.entityList.length - 1].readFromFile();\t\n\t\t\t// var bar = new Promise((resolve, reject) => {\n\t\t\t// \tfiles.forEach(function(this:any, file:string)\n\t\t\t// \t{\n\t\t\t// \t\tthis.entityList.push(new Entity(file));\n\t\t\t// \t\tif (file === this.topLevelFile)\n\t\t\t// \t\t{\n\t\t\t// \t\t\tthis.topLevelEntity = this.entityList[this.entityList.length - 1];\n\t\t\t// \t\t}\n\n\n\t\t\t// \t}.bind(this)\t\n\t\t\t// \t);\n\t\t\t// \tresolve();\n\t\t\t// });\n\n\t\t\t// bar.then(() => {\n\t\t\t// \tconsole.log('All done! number of entities: ' + this.entityList.length);\n\t\t\t// \tconsole.log('top level entity name: ' + this.topLevelEntity?.label);\n\t\t\t// });\n\n\t\t\t// // await this.entityList[0].readFromFile();\n\n\t\t\t// // var foo = new Promise((resolve, reject) => {\n\t\t\t// // \tthis.entityList.forEach(async function(this:any, ent:Entity)\n\t\t\t// // \t{\n\t\t\t// // \t\tawait ent.readFromFile();\n\t\t\t// // \t\tresolve();\n\n\t\t\t// // \t}.bind(this)\t\n\t\t\t// // \t);\n\n\t\t\t// // });\n\n\t\t\t// // foo.then(() => {\n\t\t\t// // \tconsole.log('All done 2 number of entities: ' + this.entityList.length);\n\t\t\t// // });\n\n\n\t\t}\n\t}\n\n\tgetTreeItem(element: Entity): vscode.TreeItem {\n\t\treturn element;\n\t}\n\n\tgetChildren(element?: Entity): Thenable<Entity[]> {\n\t\tlet topLevelSetting: string | undefined = vscode.workspace.getConfiguration('VHDL-hierarchy', null).get('TopLevelFile');\n\t\tif (!this.topLevelFile) {\n\t\t\tif (topLevelSetting) {\n\t\t\t\tthis.topLevelFile = topLevelSetting;\n\t\t\t}\n\t\t\tvscode.window.showInformationMessage('No top levl file set. Set a top level file using the SetTopLevel command');\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst root = [new Entity(\"\\test\\test\\entity1.vhd\")];\n\n\t\tif (element) {\n\t\t\treturn Promise.resolve(element.childEntities);\n\t\t} else if (this.topLevelEntity) {\n\t\t\treturn Promise.resolve([this.topLevelEntity]);\n\t\t} else {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t}\n\n\t//  public getVhdlFiles(dir:String, filelist:string[] ) : string[]\n\t// {\n\t// \tvar path = require('path');\n\t// \tvar fs = require('fs'),\n\n\t// \tfiles = fs.readdirSync(dir);\n\t// \tfilelist = filelist || [];\n\n\t// \tfiles.forEach(function(file:String) {\n\t// \t\tif (fs.statSync(path.join(dir, file)).isDirectory()) {\n\t// \t\t\tfilelist = EntityProvider.getVhdlFiles(path.join(dir, file), filelist);\n\t// \t\t}\n\t// \t\telse if (path.extname(file) === \".vhd\"){\n\t// \t\t\tfilelist.push(path.join(dir, file));\n\t// \t\t}\n\t// \t});\n\t// \treturn filelist;\n\t// }\n\n\t// /**\n\t//  * Given the path to package.json, read all its dependencies and devDependencies.\n\t//  */\n\t// private getDepsInPackageJson(packageJsonPath: string): Dependency[] {\n\t// \tif (this.pathExists(packageJsonPath)) {\n\t// \t\tconst packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));\n\n\t// \t\tconst toDep = (moduleName: string, version: string): Dependency => {\n\t// \t\t\tif (this.pathExists(path.join(this.workspaceRoot, 'node_modules', moduleName))) {\n\t// \t\t\t\treturn new Dependency(moduleName, version, vscode.TreeItemCollapsibleState.Collapsed);\n\t// \t\t\t} else {\n\t// \t\t\t\treturn new Dependency(moduleName, version, vscode.TreeItemCollapsibleState.None, {\n\t// \t\t\t\t\tcommand: 'extension.openPackageOnNpm',\n\t// \t\t\t\t\ttitle: '',\n\t// \t\t\t\t\targuments: [moduleName]\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t};\n\n\t// \t\tconst deps = packageJson.dependencies\n\t// \t\t\t? Object.keys(packageJson.dependencies).map(dep => toDep(dep, packageJson.dependencies[dep]))\n\t// \t\t\t: [];\n\t// \t\tconst devDeps = packageJson.devDependencies\n\t// \t\t\t? Object.keys(packageJson.devDependencies).map(dep => toDep(dep, packageJson.devDependencies[dep]))\n\t// \t\t\t: [];\n\t// \t\treturn deps.concat(devDeps);\n\t// \t} else {\n\t// \t\treturn [];\n\t// \t}\n\t// }\n\n\tprivate pathExists(p: string): boolean {\n\t\ttry {\n\t\t\tfs.accessSync(p);\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nfunction getVhdlFiles(dir: String, filelist: string[]) {\n\tvar path = require('path');\n\tvar fs = require('fs'),\n\n\t\tfiles = fs.readdirSync(dir);\n\tfilelist = filelist || [];\n\n\tfiles.forEach(function (file: String) {\n\t\tif (fs.statSync(path.join(dir, file)).isDirectory()) {\n\t\t\tfilelist = getVhdlFiles(path.join(dir, file), filelist);\n\t\t}\n\t\telse if (path.extname(file) === \".vhd\") {\n\t\t\tfilelist.push(path.join(dir, file));\n\t\t}\n\t});\n\treturn filelist;\n}","import { emit } from 'process';\r\nimport * as vscode from 'vscode';\r\n\r\n\r\nexport class Entity extends vscode.TreeItem {\r\n    analyzed: boolean;\r\n    library: String;\r\n\r\n    childEntitiesText: string[];\r\n    childEntities: Entity[];\r\n    filePath: string;\r\n\r\n    constructor(filePath: string) {\r\n        super(\"...\");\r\n        this.analyzed = false;\r\n        this.library = \"\";\r\n        this.childEntitiesText = [];\r\n        this.childEntities = [];\r\n        this.filePath = filePath;\r\n        var path = require('path');\r\n        var filename = path.basename(filePath);\r\n        this.label = filename;\r\n        this.command = { command: 'vscode.open', title: \"Open File\", arguments: [vscode.Uri.file(filePath)] };\r\n        // this.contextValue = 'file';\r\n\r\n    }\r\n\r\n    // @ts-nocheck\r\n    get tooltip(): string {\r\n        if (!this.analyzed) {\r\n            return `${this.label}-not analyzed`;\r\n        }\r\n        return `${this.label}-analyzed`;\r\n    }\r\n    // @ts-nocheck\r\n    get description(): string {\r\n        if (this.library !== \"\") {\r\n            return \"\" + this.library;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    // iconPath = {\r\n    // \tlight: path.join(__filename, '..', '..', 'resources', 'light', 'dependency.svg'),\r\n    // \tdark: path.join(__filename, '..', '..', 'resources', 'dark', 'dependency.svg')\r\n    // };\r\n\r\n    public readFromFile(): Promise<undefined> {\r\n        var foo = new Promise<undefined>((resolve, reject) => {\r\n            const readline = require('readline');\r\n            const fs = require('fs');\r\n\r\n            const readInterface = readline.createInterface({\r\n                input: fs.createReadStream(this.filePath),\r\n                output: process.stdout,\r\n                console: false\r\n            });\r\n\r\n            readInterface.on('line', function (this: any, line: any) {\r\n                const entityEx = /entity\\s(?<entity>\\w+)\\sis/;\r\n                const usedEntityEx = /\\w+\\s+:\\s+entity\\s+(?<entity_used>[a-zA-Z_.0-9]+)/;\r\n                const usedCompEx = /component\\s(?<component>\\w+)/;\r\n                var regexp = new RegExp(entityEx, 'i'), test = regexp.exec(line);\r\n                if (test?.groups) {\r\n                    var path = require('path');\r\n                    this.label = test.groups['entity'];\r\n                    this.library = path.dirname(this.filePath).split(path.sep).pop();\r\n                    console.log(\"entity found:\" + test.groups['entity'] + \"in lib \" + this.library);\r\n                }\r\n\r\n                var regexp2 = new RegExp(usedEntityEx, 'i'), test2 = regexp2.exec(line);\r\n                if (test2?.groups) {\r\n                    var usedEntityName = test2.groups['entity_used'];\r\n                    if (usedEntityName.includes('.')) {\r\n                        //handle library usage\r\n                        usedEntityName = usedEntityName.split('.')[1];\r\n                    }\r\n                    this.childEntitiesText.push(usedEntityName);\r\n                    console.log(\"used entity found:\" + usedEntityName);\r\n                }\r\n\r\n                var regexp3 = new RegExp(usedCompEx, 'i'), test3 = regexp3.exec(line);\r\n                if (test3?.groups) {\r\n                    this.childEntitiesText.push(test3.groups['component']);\r\n                    console.log(\"used component found:\" + test3.groups['component']);\r\n                }\r\n\r\n\r\n            }.bind(this));\r\n\r\n            readInterface.on('close', () => {\r\n                console.log('done reading');\r\n                if (this.childEntitiesText.length > 0) {\r\n                    this.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\r\n                }\r\n                resolve(undefined);\r\n            });\r\n        });\r\n        return foo;\r\n    }\r\n\r\n    public findChieldEntities(list: Entity[]) {\r\n        for (const ent of list) {\r\n            let label = ent.label?.toString();\r\n            if (label) {\r\n                if (this.childEntitiesText.indexOf(label) > -1) {\r\n                    this.childEntities.push(ent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { QuickPickItem } from 'vscode';\n\n// import { DepNodeProvider, Dependency } from './nodeDependencies';\nimport { EntityProvider } from './EntityProvider';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"vhdlhierarchy\" is now active!');\n\n\n\n\tif (vscode.workspace.rootPath) {\n\t\tconst path = vscode.workspace.rootPath;\n\t\t// (async () => {\n\t\t// \tfor await (const f of getFiles(path)) {\n\t\t// \t  console.log(f);\n\t\t// \t}\n\t\t//   })();\n\t\t// string[] vscode.FileSystemError\n\t\tlet files: StringItem[] = [];\n\t\t// walkSync(path, files);\n\t\tgetVhdlFileItems(path, files);\n\n\t\tconst entityProvider = new EntityProvider(vscode.workspace.rootPath);\n\t\tvscode.window.registerTreeDataProvider('vhdlHierachy', entityProvider);\n\n\t\tvscode.commands.registerCommand('vhdl-hierarchy.refresh', () =>\n\t\t\tentityProvider.refresh()\n\t\t);\n\n\n\t\tlet disposable = vscode.commands.registerCommand('vhdl-hierarchy.setTopLevel', () => {\n\t\t\t// The code you place here will be executed every time your command is executed\n\n\t\t\t// Display a message box to the user\n\n\t\t\t//  vscode.window.showQuickPick(files, { onDidAccept: handleSelectTopLEvel});\n\t\t\tconst quickpick = vscode.window.createQuickPick<StringItem>();\n\t\t\tquickpick.items = files;\n\n\n\n\t\t\tquickpick.onDidChangeSelection(items => {\n\t\t\t\tvscode.window.showInformationMessage('Set top level file:  ' + items[0].label);\n\t\t\t\tentityProvider.topLevelFile = items[0].base;\n\t\t\t});\n\t\t\tquickpick.onDidAccept(() => {\n\t\t\t\tquickpick.hide();\n\t\t\t\tvscode.commands.executeCommand('vhdl-hierarchy.analyze');\n\t\t\t});\n\t\t\tquickpick.show();\n\n\n\t\t});\n\t\t// context.subscriptions.push(disposable);\n\n\t\t// context.subscriptions.push(\n\t\tvscode.commands.registerCommand('vhdl-hierarchy.analyze', () => entityProvider.analyze());\n\n\t\tvscode.commands.executeCommand('vhdl-hierarchy.analyze');\n\n\n\n\n\t}\n\telse {\n\t\tconsole.warn(\"Could not start the node provider as the workspace root is empty\");\n\t}\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\n\n\n}\n\nclass StringItem implements vscode.QuickPickItem {\n\tlabel: string;\n\tdescription?: string | undefined;\n\n\tconstructor(public base: string) {\n\t\tvar path = require('path');\n\t\tthis.label = path.basename(base);\n\t\t// this.description = path.dirname(path.relative(base.fsPath, uri.fsPath));\n\t}\n\n}\n\nfunction getVhdlFileItems(dir: String, filelist: StringItem[]) {\n\tvar path = require('path');\n\tvar fs = require('fs'),\n\n\t\tfiles = fs.readdirSync(dir);\n\tfilelist = filelist || [];\n\n\tfiles.forEach(function (file: String) {\n\t\tif (fs.statSync(path.join(dir, file)).isDirectory()) {\n\t\t\tfilelist = getVhdlFileItems(path.join(dir, file), filelist);\n\t\t}\n\t\telse if (path.extname(file) === \".vhd\") {\n\t\t\tfilelist.push(new StringItem(path.join(dir, file)));\n\t\t}\n\t});\n\treturn filelist;\n}\n\nfunction handleSelectTopLEvel(file: StringItem) {\n\tvscode.window.showInformationMessage('Hello World from VHDLhierarchy!, selected ' + file);\n}\n\n\n// const { resolve } = require('path');\n// const { readdir } = require('fs').promises;\n\n// async function* getFiles(dir:String) : any {\n// \tconst dirents = await readdir(dir, { withFileTypes: true });\n// \tfor (const dirent of dirents) {\n// \t  const res = resolve(dir, dirent.name);\n// \t  const ext = resolve.extname(res);\n// \t  if (dirent.isDirectory()) {\n// \t\tyield* getFiles(res);\n// \t//   } else if (ext === \".vhd\") {\n// \t// \tyield res;\n// \t  } else {\n// \t  \tyield res;\n// \t  }\n// \t}\n//   }\n\n// List all files in a directory in Node.js recursively in a synchronous fashion\nvar walkSync = function (dir: string, filelist: vscode.QuickPickItem[]) {\n\tvar path = require('path');\n\tvar fs = require('fs'),\n\t\tfiles = fs.readdirSync(dir);\n\tfilelist = filelist || [];\n\tfiles.forEach(function (file: String) {\n\t\tif (fs.statSync(path.join(dir, file)).isDirectory()) {\n\t\t\tfilelist = walkSync(path.join(dir, file), filelist);\n\t\t}\n\t\telse if (path.extname(file) === \".vhd\") {\n\t\t\tfilelist.push(path.join(dir, file));\n\t\t}\n\t});\n\treturn filelist;\n};\n\n// this method is called when your extension is deactivated\nexport function deactivate() { }\n","module.exports = require(\"fs\");;","module.exports = require(\"path\");;","module.exports = require(\"readline\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/extension.ts\");\n"],"sourceRoot":""}